import os
import discord
from discord import app_commands
from discord.ext import commands
from datetime import timedelta
import aiohttp  # –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ IP

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===
TOKEN = os.getenv("TOKEN")  # –¢–æ–∫–µ–Ω –±–µ—Ä—ë—Ç—Å—è –∏–∑ Render Secrets
GUILD_ID = 1429442935023472714  # ID —Ç–≤–æ–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
OWNER_ROLE_IDS = [1429445483948015727]  # —Ä–æ–ª–∏ own / coown

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–Ω—Ç–æ–≤ ===
intents = discord.Intents.default()
intents.members = True
intents.message_content = True
intents.messages = True
intents.guilds = True
intents.voice_states = True

bot = commands.Bot(command_prefix="!", intents=intents)
tree = bot.tree


# === –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–µ–π ===
def is_admin():
    async def predicate(interaction: discord.Interaction):
        if not interaction.user.guild_permissions.administrator:
            await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", ephemeral=True)
            return False
        return True
    return app_commands.check(predicate)


# === –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ ===
@bot.event
async def on_ready():
    await tree.sync(guild=discord.Object(id=GUILD_ID))
    print(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}")
    print(f"‚öôÔ∏è –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(tree.get_commands())} –∫–æ–º–∞–Ω–¥.")


# === BAN ===
@tree.command(name="ban", description="–ó–∞–±–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", guild=discord.Object(id=GUILD_ID))
@is_admin()
async def ban(interaction: discord.Interaction, member: discord.Member, reason: str = "–ù–µ —É–∫–∞–∑–∞–Ω–∞"):
    await member.ban(reason=reason)
    await interaction.response.send_message(f"üî® {member.mention} –∑–∞–±–∞–Ω–µ–Ω. –ü—Ä–∏—á–∏–Ω–∞: {reason}")


# === KICK ===
@tree.command(name="kick", description="–ö–∏–∫–Ω—É—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", guild=discord.Object(id=GUILD_ID))
@is_admin()
async def kick(interaction: discord.Interaction, member: discord.Member, reason: str = "–ù–µ —É–∫–∞–∑–∞–Ω–∞"):
    await member.kick(reason=reason)
    await interaction.response.send_message(f"üë¢ {member.mention} –∫–∏–∫–Ω—É—Ç. –ü—Ä–∏—á–∏–Ω–∞: {reason}")


# === TIMEOUT ===
@tree.command(name="timeout", description="–í—ã–¥–∞—Ç—å —Ç–∞–π–º–∞—É—Ç —É—á–∞—Å—Ç–Ω–∏–∫—É", guild=discord.Object(id=GUILD_ID))
@is_admin()
async def timeout(interaction: discord.Interaction, member: discord.Member, minutes: int, reason: str = "–ù–µ —É–∫–∞–∑–∞–Ω–∞"):
    duration = timedelta(minutes=minutes)
    await member.timeout(duration, reason=reason)
    await interaction.response.send_message(f"‚è∞ {member.mention} –ø–æ–ª—É—á–∏–ª —Ç–∞–π–º–∞—É—Ç –Ω–∞ {minutes} –º–∏–Ω. –ü—Ä–∏—á–∏–Ω–∞: {reason}")


# === MUTE VOICE ===
@tree.command(name="mute", description="–ó–∞–º—É—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ –≤–æ–π—Å–µ", guild=discord.Object(id=GUILD_ID))
@is_admin()
async def mute(interaction: discord.Interaction, member: discord.Member, reason: str = "–ù–µ —É–∫–∞–∑–∞–Ω–∞"):
    if member.voice:
        await member.edit(mute=True)
        await interaction.response.send_message(f"üîá {member.mention} –∑–∞–º—å—é—á–µ–Ω. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
    else:
        await interaction.response.send_message("‚ùå –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.")


# === UNMUTE VOICE ===
@tree.command(name="unmute", description="–†–∞–∑–º—É—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", guild=discord.Object(id=GUILD_ID))
@is_admin()
async def unmute(interaction: discord.Interaction, member: discord.Member):
    if member.voice:
        await member.edit(mute=False)
        await interaction.response.send_message(f"üîä {member.mention} —Ä–∞–∑–º—å—é—á–µ–Ω.")
    else:
        await interaction.response.send_message("‚ùå –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.")


# === CLEAR ===
@tree.command(name="clear", description="–£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è", guild=discord.Object(id=GUILD_ID))
@is_admin()
async def clear(interaction: discord.Interaction, amount: int):
    await interaction.channel.purge(limit=amount)
    await interaction.response.send_message(f"üßπ –£–¥–∞–ª–µ–Ω–æ {amount} —Å–æ–æ–±—â–µ–Ω–∏–π.", ephemeral=True)


# === LOGS ===
deleted_messages = []

@bot.event
async def on_message_delete(message):
    if message.guild and not message.author.bot:
        deleted_messages.append((message.author, message.content))
        if len(deleted_messages) > 10:
            deleted_messages.pop(0)


@tree.command(name="logs", description="–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —É–¥–∞–ª—ë–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è", guild=discord.Object(id=GUILD_ID))
@is_admin()
async def logs(interaction: discord.Interaction):
    if not deleted_messages:
        await interaction.response.send_message("üì≠ –ù–µ—Ç —É–¥–∞–ª—ë–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.")
        return

    log_text = "\n".join(
        [f"**{a.display_name}**: {c}" for a, c in deleted_messages[-10:]]
    )
    await interaction.response.send_message(f"üïµÔ∏è –ü–æ—Å–ª–µ–¥–Ω–∏–µ —É–¥–∞–ª—ë–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:\n{log_text}")


# === LOOKUP ===
@tree.command(name="lookup", description="–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± IP –∏–ª–∏ –¥–æ–º–µ–Ω–µ", guild=discord.Object(id=GUILD_ID))
@is_admin()
async def lookup(interaction: discord.Interaction, target: str):
    """–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π IP-–æ–±–∑–æ—Ä (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç ipinfo.io API)"""
    await interaction.response.defer()  # —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ —Ç–∞–π–º–∞—É—Ç–∞
    async with aiohttp.ClientSession() as session:
        try:
            async with session.get(f"https://ipinfo.io/{target}/json") as resp:
                if resp.status != 200:
                    await interaction.followup.send("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–≤–µ—Ä—å –≤–≤–µ–¥—ë–Ω–Ω—ã–π IP –∏–ª–∏ –¥–æ–º–µ–Ω.")
                    return

                data = await resp.json()
                info = [
                    f"üåç **IP:** {data.get('ip', '‚Äî')}",
                    f"üèôÔ∏è **–ì–æ—Ä–æ–¥:** {data.get('city', '‚Äî')}",
                    f"üåé **–†–µ–≥–∏–æ–Ω:** {data.get('region', '‚Äî')}",
                    f"üá®üá¶ **–°—Ç—Ä–∞–Ω–∞:** {data.get('country', '‚Äî')}",
                    f"üè¢ **–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è (ISP):** {data.get('org', '‚Äî')}",
                    f"üïí **–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å:** {data.get('timezone', '‚Äî')}",
                    f"üìç **–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:** {data.get('loc', '‚Äî')}"
                ]
                await interaction.followup.send("\n".join(info))
        except Exception as e:
            await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")


# === –ó–∞–ø—É—Å–∫ ===
if TOKEN is None:
    raise ValueError("‚ùå TOKEN environment variable is not set. –î–æ–±–∞–≤—å TOKEN –≤ Render Secrets!")

bot.run(TOKEN)
